{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 14,
    "patch": 0
  },
  "configurePresets": [{% if not vcpkg %}
    {
      "name": "cmake-pedantic",
      "hidden": true,
      "warnings": {
        "dev": true,
        "deprecated": true,
        "uninitialized": true,
        "unusedCli": true,
        "systemVars": false
      },
      "errors": {
        "dev": true,
        "deprecated": true
      }
    },{% end %}
    {
      "name": "dev-mode",
      "hidden": true,{% if not vcpkg %}
      "inherits": "cmake-pedantic",{% end %}
      "cacheVariables": {
        "{= name =}_DEVELOPER_MODE": "ON"{% if vcpkg %},
        "VCPKG_MANIFEST_FEATURES": "test"{% end %}
      }
    },{% if vcpkg %}
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
      }
    },
    {
      "name": "vcpkg-win64-static",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "x64-windows-static-md"
      }
    },{% end %}{% if conan %}
    {
      "name": "conan",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/conan/conan_toolchain.cmake"
      }
    },{% end %}
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C{% if cpp %}XX{% end %}_CPPCHECK": "cppcheck;--inline-suppr"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C{% if cpp %}XX{% end %}_CLANG_TIDY": "clang-tidy;--header-filter=${sourceDir}/*"
      }
    },
    {
      "name": "ci-std",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C{% if cpp %}XX{% end %}_EXTENSIONS": "OFF",
        "CMAKE_C{% if cpp %}XX{% end %}_STANDARD": "{= std =}",
        "CMAKE_C{% if cpp %}XX{% end %}_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "flags-unix",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C{% if cpp %}XX{% end %}_FLAGS": "-Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wshadow -Wformat=2 -Wundef -Werror=float-equal{% if c %} -Werror=strict-prototypes -Wwrite-strings{% end %}"
      }
    },
    {
      "name": "flags-windows",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C{% if cpp %}XX{% end %}_FLAGS": "/W4 /permissive- /utf-8 /volatile:iso{% if cpp %} /EHsc /Zc:__cplusplus /Zc:throwingNew{% end %}"
      }
    },
    {
      "name": "ci-unix",
      "generator": "Unix Makefiles",
      "hidden": true,
      "inherits": ["flags-unix", "ci-std"],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "ci-win64",
      "inherits": ["flags-windows", "ci-std"],
      "generator": "Visual Studio 17 2022",
      "architecture": "x64",
      "hidden": true
    },
    {
      "name": "coverage-unix",
      "binaryDir": "${sourceDir}/build/coverage",
      "inherits": "ci-unix",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_C{% if cpp %}XX{% end %}_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"{% if pm %},
        "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Coverage;RelWithDebInfo;Release;Debug;"{% end %}
      }
    },
    {
      "name": "ci-coverage",
      "inherits": ["coverage-unix", "dev-mode"{% if pm %}, "{= pm_name =}"{% end %}],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "ci-sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": ["ci-unix", "dev-mode"{% if pm %}, "{= pm_name =}"{% end %}],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_C{% if cpp %}XX{% end %}_FLAGS_SANITIZE": "-O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common"{% if pm %},
        "CMAKE_MAP_IMPORTED_CONFIG_SANITIZE": "Sanitize;RelWithDebInfo;Release;Debug;"{% end %}
      }
    },
    {
      "name": "ci-build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "ci-macos",
      "inherits": ["ci-build", "ci-unix", "dev-mode"{% if pm %}, "{= pm_name =}"{% end %}]
    },
    {
      "name": "ci-ubuntu",
      "inherits": ["ci-build", "ci-unix", "clang-tidy"{% if pm %}, "{= pm_name =}"{% end %}, "cppcheck", "dev-mode"]
    },
    {
      "name": "ci-windows",
      "inherits": ["ci-build", "ci-win64", "dev-mode"{% if pm %}, "{= pm_name =}"{% if vcpkg %}, "vcpkg-win64-static"{% end %}{% end %}]
    }
  ]
}
